<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- MySQL 연동 -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
        <property name="url" value="jdbc:log4jdbc:mysql://114.70.234.76:3306/myboard?serverTimezone=Asia/Seoul"/>
        <property name="username" value="user"/>
        <property name="password" value="user"/>
    </bean>
   
    <!-- Mybatis 연동 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dataSource"></property>
         <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
         <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"/>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    </bean>
    
    <!-- scan -->
    <context:component-scan base-package="com.mayfarm.service"></context:component-scan>
    <context:component-scan base-package="com.mayfarm.dao"></context:component-scan>
    <context:component-scan base-package="com.mayfarm.vo"></context:component-scan>
    
    <!-- 트랜잭션 처리를 할때 transactionManager라는 태그를 만들 예정-->
    <!-- 트랜잭션 어노테이션을 처리해주는 코드 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- transactionManager는 DataSourceTransactionManager는 클래스를 지정-->
    <bean id= "transactionManager"
        class= "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
</beans>